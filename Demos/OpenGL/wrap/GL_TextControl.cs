/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class GL_TextControl : GL_DialogControl {
  private HandleRef swigCPtr;

  internal GL_TextControl(IntPtr cPtr, bool cMemoryOwn) : base(OpenGLSupportPINVOKE.GL_TextControl_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(GL_TextControl obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~GL_TextControl() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OpenGLSupportPINVOKE.delete_GL_TextControl(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public SWIGTYPE_p_btAlignedObjectArrayT_char_const_p_t m_textLines {
    set {
      OpenGLSupportPINVOKE.GL_TextControl_m_textLines_set(swigCPtr, SWIGTYPE_p_btAlignedObjectArrayT_char_const_p_t.getCPtr(value));
      if (OpenGLSupportPINVOKE.SWIGPendingException.Pending) throw OpenGLSupportPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_btAlignedObjectArrayT_char_const_p_t ret = new SWIGTYPE_p_btAlignedObjectArrayT_char_const_p_t(OpenGLSupportPINVOKE.GL_TextControl_m_textLines_get(swigCPtr), true);
      if (OpenGLSupportPINVOKE.SWIGPendingException.Pending) throw OpenGLSupportPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public GL_TextControl() : this(OpenGLSupportPINVOKE.new_GL_TextControl(), true) {
  }

  public override void draw(SWIGTYPE_p_int parentHorPos, SWIGTYPE_p_int parentVertPos, float deltaTime) {
    OpenGLSupportPINVOKE.GL_TextControl_draw(swigCPtr, SWIGTYPE_p_int.getCPtr(parentHorPos), SWIGTYPE_p_int.getCPtr(parentVertPos), deltaTime);
    if (OpenGLSupportPINVOKE.SWIGPendingException.Pending) throw OpenGLSupportPINVOKE.SWIGPendingException.Retrieve();
  }

}
