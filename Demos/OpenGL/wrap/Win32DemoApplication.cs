/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class Win32DemoApplication : DemoApplication {
  private HandleRef swigCPtr;

  internal Win32DemoApplication(IntPtr cPtr, bool cMemoryOwn) : base(OpenGLSupportPINVOKE.Win32DemoApplication_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Win32DemoApplication obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Win32DemoApplication() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OpenGLSupportPINVOKE.delete_Win32DemoApplication(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public override void swapBuffers() {
    OpenGLSupportPINVOKE.Win32DemoApplication_swapBuffers(swigCPtr);
  }

  public override void specialKeyboard(int key, int x, int y) {
    OpenGLSupportPINVOKE.Win32DemoApplication_specialKeyboard(swigCPtr, key, x, y);
  }

  public override void updateModifierKeys() {
    OpenGLSupportPINVOKE.Win32DemoApplication_updateModifierKeys(swigCPtr);
  }

}
