/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

class OpenGLSupportPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("OpenGLSupport", EntryPoint="SWIGRegisterExceptionCallbacks_OpenGLSupport")]
    public static extern void SWIGRegisterExceptionCallbacks_OpenGLSupport(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("OpenGLSupport", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_OpenGLSupport")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_OpenGLSupport(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_OpenGLSupport(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_OpenGLSupport(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(OpenGLSupportPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(OpenGLSupportPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("OpenGLSupport", EntryPoint="SWIGRegisterStringCallback_OpenGLSupport")]
    public static extern void SWIGRegisterStringCallback_OpenGLSupport(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_OpenGLSupport(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static OpenGLSupportPINVOKE() {
  }


  [DllImport("OpenGLSupport", EntryPoint="CSharp_GLDebugDrawStringInternal__SWIG_0")]
  public static extern void GLDebugDrawStringInternal__SWIG_0(int jarg1, int jarg2, string jarg3, HandleRef jarg4, bool jarg5, int jarg6);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GLDebugDrawStringInternal__SWIG_1")]
  public static extern void GLDebugDrawStringInternal__SWIG_1(int jarg1, int jarg2, string jarg3, HandleRef jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GLDebugDrawString")]
  public static extern void GLDebugDrawString(int jarg1, int jarg2, string jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GLDebugResetFont")]
  public static extern void GLDebugResetFont(int jarg1, int jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_new_GL_DialogDynamicsWorld")]
  public static extern IntPtr new_GL_DialogDynamicsWorld();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_GL_DialogDynamicsWorld")]
  public static extern void delete_GL_DialogDynamicsWorld(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogDynamicsWorld_setScreenSize")]
  public static extern void GL_DialogDynamicsWorld_setScreenSize(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogDynamicsWorld_createDialog")]
  public static extern IntPtr GL_DialogDynamicsWorld_createDialog(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, string jarg6);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogDynamicsWorld_createToggle")]
  public static extern IntPtr GL_DialogDynamicsWorld_createToggle(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogDynamicsWorld_createSlider__SWIG_0")]
  public static extern IntPtr GL_DialogDynamicsWorld_createSlider__SWIG_0(HandleRef jarg1, HandleRef jarg2, string jarg3, float jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogDynamicsWorld_createSlider__SWIG_1")]
  public static extern IntPtr GL_DialogDynamicsWorld_createSlider__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogDynamicsWorld_draw")]
  public static extern void GL_DialogDynamicsWorld_draw(HandleRef jarg1, float jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogDynamicsWorld_mouseFunc")]
  public static extern bool GL_DialogDynamicsWorld_mouseFunc(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogDynamicsWorld_mouseMotionFunc")]
  public static extern void GL_DialogDynamicsWorld_mouseMotionFunc(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_GL_DialogControl")]
  public static extern void delete_GL_DialogControl(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogControl_draw")]
  public static extern void GL_DialogControl_draw(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogControl_getType")]
  public static extern int GL_DialogControl_getType(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_TextControl_m_textLines_set")]
  public static extern void GL_TextControl_m_textLines_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_TextControl_m_textLines_get")]
  public static extern IntPtr GL_TextControl_m_textLines_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_new_GL_TextControl")]
  public static extern IntPtr new_GL_TextControl();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_GL_TextControl")]
  public static extern void delete_GL_TextControl(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_TextControl_draw")]
  public static extern void GL_TextControl_draw(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ToggleControl_m_toggleBody_set")]
  public static extern void GL_ToggleControl_m_toggleBody_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ToggleControl_m_toggleBody_get")]
  public static extern IntPtr GL_ToggleControl_m_toggleBody_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ToggleControl_m_parentWindow_set")]
  public static extern void GL_ToggleControl_m_parentWindow_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ToggleControl_m_parentWindow_get")]
  public static extern IntPtr GL_ToggleControl_m_parentWindow_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ToggleControl_m_toggleText_set")]
  public static extern void GL_ToggleControl_m_toggleText_set(HandleRef jarg1, string jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ToggleControl_m_toggleText_get")]
  public static extern string GL_ToggleControl_m_toggleText_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ToggleControl_m_active_set")]
  public static extern void GL_ToggleControl_m_active_set(HandleRef jarg1, bool jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ToggleControl_m_active_get")]
  public static extern bool GL_ToggleControl_m_active_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_new_GL_ToggleControl")]
  public static extern IntPtr new_GL_ToggleControl(string jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ToggleControl_draw")]
  public static extern void GL_ToggleControl_draw(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_GL_ToggleControl")]
  public static extern void delete_GL_ToggleControl(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_sliderBody_set")]
  public static extern void GL_SliderControl_m_sliderBody_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_sliderBody_get")]
  public static extern IntPtr GL_SliderControl_m_sliderBody_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_parentWindow_set")]
  public static extern void GL_SliderControl_m_parentWindow_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_parentWindow_get")]
  public static extern IntPtr GL_SliderControl_m_parentWindow_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_lowerLimit_set")]
  public static extern void GL_SliderControl_m_lowerLimit_set(HandleRef jarg1, float jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_lowerLimit_get")]
  public static extern float GL_SliderControl_m_lowerLimit_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_upperLimit_set")]
  public static extern void GL_SliderControl_m_upperLimit_set(HandleRef jarg1, float jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_upperLimit_get")]
  public static extern float GL_SliderControl_m_upperLimit_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_constraint_set")]
  public static extern void GL_SliderControl_m_constraint_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_constraint_get")]
  public static extern IntPtr GL_SliderControl_m_constraint_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_fraction_set")]
  public static extern void GL_SliderControl_m_fraction_set(HandleRef jarg1, float jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_fraction_get")]
  public static extern float GL_SliderControl_m_fraction_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_sliderText_set")]
  public static extern void GL_SliderControl_m_sliderText_set(HandleRef jarg1, string jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_m_sliderText_get")]
  public static extern string GL_SliderControl_m_sliderText_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_new_GL_SliderControl")]
  public static extern IntPtr new_GL_SliderControl(string jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, float jarg5, HandleRef jarg6);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_draw")]
  public static extern void GL_SliderControl_draw(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_btGetFraction")]
  public static extern float GL_SliderControl_btGetFraction(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_getLowerLimit")]
  public static extern float GL_SliderControl_getLowerLimit(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_getUpperLimit")]
  public static extern float GL_SliderControl_getUpperLimit(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_getConstraint")]
  public static extern IntPtr GL_SliderControl_getConstraint(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_GL_SliderControl")]
  public static extern void delete_GL_SliderControl(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_new_GL_DialogWindow")]
  public static extern IntPtr new_GL_DialogWindow(int jarg1, int jarg2, int jarg3, int jarg4, HandleRef jarg5, string jarg6);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_GL_DialogWindow")]
  public static extern void delete_GL_DialogWindow(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_draw")]
  public static extern void GL_DialogWindow_draw(HandleRef jarg1, float jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_setScreenSize")]
  public static extern void GL_DialogWindow_setScreenSize(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_setStartPosition")]
  public static extern void GL_DialogWindow_setStartPosition(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_addControl")]
  public static extern void GL_DialogWindow_addControl(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_removeControl")]
  public static extern void GL_DialogWindow_removeControl(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_getCollisionObject")]
  public static extern IntPtr GL_DialogWindow_getCollisionObject(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_getDialogHorPos")]
  public static extern int GL_DialogWindow_getDialogHorPos(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_getDialogVertPos")]
  public static extern int GL_DialogWindow_getDialogVertPos(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_getDialogWidth")]
  public static extern int GL_DialogWindow_getDialogWidth(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_getDialogHeight")]
  public static extern int GL_DialogWindow_getDialogHeight(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_getScreenWidth")]
  public static extern int GL_DialogWindow_getScreenWidth(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_getScreenHeight")]
  public static extern int GL_DialogWindow_getScreenHeight(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_getNumControls")]
  public static extern int GL_DialogWindow_getNumControls(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_DialogWindow_getControl__SWIG_0")]
  public static extern IntPtr GL_DialogWindow_getControl__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_new_GL_ShapeDrawer")]
  public static extern IntPtr new_GL_ShapeDrawer();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_GL_ShapeDrawer")]
  public static extern void delete_GL_ShapeDrawer(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ShapeDrawer_drawOpenGL")]
  public static extern void GL_ShapeDrawer_drawOpenGL(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5, HandleRef jarg6, HandleRef jarg7);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ShapeDrawer_drawShadow")]
  public static extern void GL_ShapeDrawer_drawShadow(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ShapeDrawer_enableTexture")]
  public static extern bool GL_ShapeDrawer_enableTexture(HandleRef jarg1, bool jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ShapeDrawer_hasTextureEnabled")]
  public static extern bool GL_ShapeDrawer_hasTextureEnabled(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ShapeDrawer_drawCylinder")]
  public static extern void GL_ShapeDrawer_drawCylinder(float jarg1, float jarg2, int jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ShapeDrawer_drawSphere")]
  public static extern void GL_ShapeDrawer_drawSphere(HandleRef jarg1, float jarg2, int jarg3, int jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ShapeDrawer_drawCoordSystem")]
  public static extern void GL_ShapeDrawer_drawCoordSystem();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_OGL_displaylist_register_shape")]
  public static extern void OGL_displaylist_register_shape(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_OGL_displaylist_clean")]
  public static extern void OGL_displaylist_clean();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_new_GL_Simplex1to4")]
  public static extern IntPtr new_GL_Simplex1to4();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_GL_Simplex1to4")]
  public static extern void delete_GL_Simplex1to4(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_Simplex1to4_calcClosest")]
  public static extern void GL_Simplex1to4_calcClosest(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_Simplex1to4_setSimplexSolver")]
  public static extern void GL_Simplex1to4_setSimplexSolver(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_new_GLDebugDrawer")]
  public static extern IntPtr new_GLDebugDrawer();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_GLDebugDrawer")]
  public static extern void delete_GLDebugDrawer(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GLDebugDrawer_drawLine__SWIG_0")]
  public static extern void GLDebugDrawer_drawLine__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GLDebugDrawer_drawLine__SWIG_1")]
  public static extern void GLDebugDrawer_drawLine__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GLDebugDrawer_drawSphere")]
  public static extern void GLDebugDrawer_drawSphere(HandleRef jarg1, HandleRef jarg2, float jarg3, HandleRef jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GLDebugDrawer_drawTriangle")]
  public static extern void GLDebugDrawer_drawTriangle(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, float jarg6);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GLDebugDrawer_drawContactPoint")]
  public static extern void GLDebugDrawer_drawContactPoint(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, int jarg5, HandleRef jarg6);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GLDebugDrawer_reportErrorWarning")]
  public static extern void GLDebugDrawer_reportErrorWarning(HandleRef jarg1, string jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GLDebugDrawer_draw3dText")]
  public static extern void GLDebugDrawer_draw3dText(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GLDebugDrawer_setDebugMode")]
  public static extern void GLDebugDrawer_setDebugMode(HandleRef jarg1, int jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GLDebugDrawer_getDebugMode")]
  public static extern int GLDebugDrawer_getDebugMode(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_new_renderTexture")]
  public static extern IntPtr new_renderTexture(int jarg1, int jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_renderTexture")]
  public static extern void delete_renderTexture(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_renderTexture_setPixel")]
  public static extern void renderTexture_setPixel(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_renderTexture_addPixel")]
  public static extern void renderTexture_addPixel(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_renderTexture_getPixel")]
  public static extern IntPtr renderTexture_getPixel(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_renderTexture_getBuffer")]
  public static extern IntPtr renderTexture_getBuffer(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_renderTexture_getWidth")]
  public static extern int renderTexture_getWidth(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_renderTexture_getHeight")]
  public static extern int renderTexture_getHeight(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_renderTexture_grapicalPrintf__SWIG_0")]
  public static extern void renderTexture_grapicalPrintf__SWIG_0(HandleRef jarg1, string jarg2, HandleRef jarg3, int jarg4, int jarg5);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_renderTexture_grapicalPrintf__SWIG_1")]
  public static extern void renderTexture_grapicalPrintf__SWIG_1(HandleRef jarg1, string jarg2, HandleRef jarg3, int jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_renderTexture_grapicalPrintf__SWIG_2")]
  public static extern void renderTexture_grapicalPrintf__SWIG_2(HandleRef jarg1, string jarg2, HandleRef jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_m_modifierKeys_set")]
  public static extern void DemoApplication_m_modifierKeys_set(HandleRef jarg1, int jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_m_modifierKeys_get")]
  public static extern int DemoApplication_m_modifierKeys_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_DemoApplication")]
  public static extern void delete_DemoApplication(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_getDynamicsWorld")]
  public static extern IntPtr DemoApplication_getDynamicsWorld(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_initPhysics")]
  public static extern void DemoApplication_initPhysics(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_setDrawClusters")]
  public static extern void DemoApplication_setDrawClusters(HandleRef jarg1, bool jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_overrideGLShapeDrawer")]
  public static extern void DemoApplication_overrideGLShapeDrawer(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_setOrthographicProjection")]
  public static extern void DemoApplication_setOrthographicProjection(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_resetPerspectiveProjection")]
  public static extern void DemoApplication_resetPerspectiveProjection(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_setTexturing")]
  public static extern bool DemoApplication_setTexturing(HandleRef jarg1, bool jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_setShadows")]
  public static extern bool DemoApplication_setShadows(HandleRef jarg1, bool jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_getTexturing")]
  public static extern bool DemoApplication_getTexturing(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_getShadows")]
  public static extern bool DemoApplication_getShadows(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_getDebugMode")]
  public static extern int DemoApplication_getDebugMode(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_setDebugMode")]
  public static extern void DemoApplication_setDebugMode(HandleRef jarg1, int jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_setAzi")]
  public static extern void DemoApplication_setAzi(HandleRef jarg1, float jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_setCameraUp")]
  public static extern void DemoApplication_setCameraUp(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_setCameraForwardAxis")]
  public static extern void DemoApplication_setCameraForwardAxis(HandleRef jarg1, int jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_myinit")]
  public static extern void DemoApplication_myinit(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_toggleIdle")]
  public static extern void DemoApplication_toggleIdle(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_updateCamera")]
  public static extern void DemoApplication_updateCamera(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_getCameraPosition")]
  public static extern IntPtr DemoApplication_getCameraPosition(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_getCameraTargetPosition")]
  public static extern IntPtr DemoApplication_getCameraTargetPosition(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_getDeltaTimeMicroseconds")]
  public static extern float DemoApplication_getDeltaTimeMicroseconds(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_setFrustumZPlanes")]
  public static extern void DemoApplication_setFrustumZPlanes(HandleRef jarg1, float jarg2, float jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_getCameraDistance")]
  public static extern float DemoApplication_getCameraDistance(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_setCameraDistance")]
  public static extern void DemoApplication_setCameraDistance(HandleRef jarg1, float jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_moveAndDisplay")]
  public static extern void DemoApplication_moveAndDisplay(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_clientMoveAndDisplay")]
  public static extern void DemoApplication_clientMoveAndDisplay(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_clientResetScene")]
  public static extern void DemoApplication_clientResetScene(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_setShootBoxShape")]
  public static extern void DemoApplication_setShootBoxShape(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_shootBox")]
  public static extern void DemoApplication_shootBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_getRayTo")]
  public static extern IntPtr DemoApplication_getRayTo(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_localCreateRigidBody")]
  public static extern IntPtr DemoApplication_localCreateRigidBody(HandleRef jarg1, float jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_keyboardCallback")]
  public static extern void DemoApplication_keyboardCallback(HandleRef jarg1, byte jarg2, int jarg3, int jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_keyboardUpCallback")]
  public static extern void DemoApplication_keyboardUpCallback(HandleRef jarg1, byte jarg2, int jarg3, int jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_specialKeyboard")]
  public static extern void DemoApplication_specialKeyboard(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_specialKeyboardUp")]
  public static extern void DemoApplication_specialKeyboardUp(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_reshape")]
  public static extern void DemoApplication_reshape(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_mouseFunc")]
  public static extern void DemoApplication_mouseFunc(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_mouseMotionFunc")]
  public static extern void DemoApplication_mouseMotionFunc(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_displayCallback")]
  public static extern void DemoApplication_displayCallback(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_renderme")]
  public static extern void DemoApplication_renderme(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_swapBuffers")]
  public static extern void DemoApplication_swapBuffers(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_updateModifierKeys")]
  public static extern void DemoApplication_updateModifierKeys(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_stepLeft")]
  public static extern void DemoApplication_stepLeft(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_stepRight")]
  public static extern void DemoApplication_stepRight(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_stepFront")]
  public static extern void DemoApplication_stepFront(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_stepBack")]
  public static extern void DemoApplication_stepBack(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_zoomIn")]
  public static extern void DemoApplication_zoomIn(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_zoomOut")]
  public static extern void DemoApplication_zoomOut(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_isIdle")]
  public static extern bool DemoApplication_isIdle(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_DemoApplication_setIdle")]
  public static extern void DemoApplication_setIdle(HandleRef jarg1, bool jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GlutDemoApplication_specialKeyboard")]
  public static extern void GlutDemoApplication_specialKeyboard(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GlutDemoApplication_swapBuffers")]
  public static extern void GlutDemoApplication_swapBuffers(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GlutDemoApplication_updateModifierKeys")]
  public static extern void GlutDemoApplication_updateModifierKeys(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_GlutDemoApplication")]
  public static extern void delete_GlutDemoApplication(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_BT_KEY_K_get")]
  public static extern char BT_KEY_K_get();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_glutmain")]
  public static extern int glutmain(int jarg1, HandleRef jarg2, int jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_STBI_VERSION_get")]
  public static extern int STBI_VERSION_get();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_STBI_default_get")]
  public static extern int STBI_default_get();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_STBI_grey_get")]
  public static extern int STBI_grey_get();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_STBI_grey_alpha_get")]
  public static extern int STBI_grey_alpha_get();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_STBI_rgb_get")]
  public static extern int STBI_rgb_get();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_STBI_rgb_alpha_get")]
  public static extern int STBI_rgb_alpha_get();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_load_from_memory")]
  public static extern IntPtr stbi_load_from_memory(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, int jarg6);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_load")]
  public static extern IntPtr stbi_load(string jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_load_from_file")]
  public static extern IntPtr stbi_load_from_file(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_io_callbacks_read_set")]
  public static extern void stbi_io_callbacks_read_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_io_callbacks_read_get")]
  public static extern IntPtr stbi_io_callbacks_read_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_io_callbacks_skip_set")]
  public static extern void stbi_io_callbacks_skip_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_io_callbacks_skip_get")]
  public static extern IntPtr stbi_io_callbacks_skip_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_io_callbacks_eof_set")]
  public static extern void stbi_io_callbacks_eof_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_io_callbacks_eof_get")]
  public static extern IntPtr stbi_io_callbacks_eof_get(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_new_stbi_io_callbacks")]
  public static extern IntPtr new_stbi_io_callbacks();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_stbi_io_callbacks")]
  public static extern void delete_stbi_io_callbacks(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_load_from_callbacks")]
  public static extern IntPtr stbi_load_from_callbacks(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, int jarg6);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_loadf_from_memory")]
  public static extern IntPtr stbi_loadf_from_memory(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, int jarg6);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_loadf")]
  public static extern IntPtr stbi_loadf(string jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_loadf_from_file")]
  public static extern IntPtr stbi_loadf_from_file(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_loadf_from_callbacks")]
  public static extern IntPtr stbi_loadf_from_callbacks(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, int jarg6);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_hdr_to_ldr_gamma")]
  public static extern void stbi_hdr_to_ldr_gamma(float jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_hdr_to_ldr_scale")]
  public static extern void stbi_hdr_to_ldr_scale(float jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_ldr_to_hdr_gamma")]
  public static extern void stbi_ldr_to_hdr_gamma(float jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_ldr_to_hdr_scale")]
  public static extern void stbi_ldr_to_hdr_scale(float jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_is_hdr_from_callbacks")]
  public static extern int stbi_is_hdr_from_callbacks(HandleRef jarg1, HandleRef jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_is_hdr_from_memory")]
  public static extern int stbi_is_hdr_from_memory(HandleRef jarg1, int jarg2);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_is_hdr")]
  public static extern int stbi_is_hdr(string jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_is_hdr_from_file")]
  public static extern int stbi_is_hdr_from_file(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_failure_reason")]
  public static extern string stbi_failure_reason();

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_image_free")]
  public static extern void stbi_image_free(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_info_from_memory")]
  public static extern int stbi_info_from_memory(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_info_from_callbacks")]
  public static extern int stbi_info_from_callbacks(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_info")]
  public static extern int stbi_info(string jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_info_from_file")]
  public static extern int stbi_info_from_file(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_set_unpremultiply_on_load")]
  public static extern void stbi_set_unpremultiply_on_load(int jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_convert_iphone_png_to_rgb")]
  public static extern void stbi_convert_iphone_png_to_rgb(int jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_zlib_decode_malloc_guesssize")]
  public static extern string stbi_zlib_decode_malloc_guesssize(string jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_zlib_decode_malloc")]
  public static extern string stbi_zlib_decode_malloc(string jarg1, int jarg2, HandleRef jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_zlib_decode_buffer")]
  public static extern int stbi_zlib_decode_buffer(string jarg1, int jarg2, string jarg3, int jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_zlib_decode_noheader_malloc")]
  public static extern string stbi_zlib_decode_noheader_malloc(string jarg1, int jarg2, HandleRef jarg3);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_stbi_zlib_decode_noheader_buffer")]
  public static extern int stbi_zlib_decode_noheader_buffer(string jarg1, int jarg2, string jarg3, int jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_Win32DemoApplication_swapBuffers")]
  public static extern void Win32DemoApplication_swapBuffers(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_Win32DemoApplication_specialKeyboard")]
  public static extern void Win32DemoApplication_specialKeyboard(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_Win32DemoApplication_updateModifierKeys")]
  public static extern void Win32DemoApplication_updateModifierKeys(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_delete_Win32DemoApplication")]
  public static extern void delete_Win32DemoApplication(HandleRef jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_TextControl_SWIGUpcast")]
  public static extern IntPtr GL_TextControl_SWIGUpcast(IntPtr jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_ToggleControl_SWIGUpcast")]
  public static extern IntPtr GL_ToggleControl_SWIGUpcast(IntPtr jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GL_SliderControl_SWIGUpcast")]
  public static extern IntPtr GL_SliderControl_SWIGUpcast(IntPtr jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_GlutDemoApplication_SWIGUpcast")]
  public static extern IntPtr GlutDemoApplication_SWIGUpcast(IntPtr jarg1);

  [DllImport("OpenGLSupport", EntryPoint="CSharp_Win32DemoApplication_SWIGUpcast")]
  public static extern IntPtr Win32DemoApplication_SWIGUpcast(IntPtr jarg1);
}
