/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class GL_DialogControl : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal GL_DialogControl(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(GL_DialogControl obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~GL_DialogControl() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          OpenGLSupportPINVOKE.delete_GL_DialogControl(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public virtual void draw(SWIGTYPE_p_int parentHorPos, SWIGTYPE_p_int parentVertPos, float deltaTime) {
    OpenGLSupportPINVOKE.GL_DialogControl_draw(swigCPtr, SWIGTYPE_p_int.getCPtr(parentHorPos), SWIGTYPE_p_int.getCPtr(parentVertPos), deltaTime);
    if (OpenGLSupportPINVOKE.SWIGPendingException.Pending) throw OpenGLSupportPINVOKE.SWIGPendingException.Retrieve();
  }

  public int getType() {
    int ret = OpenGLSupportPINVOKE.GL_DialogControl_getType(swigCPtr);
    return ret;
  }

}
